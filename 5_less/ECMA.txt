// √рамматика ECMA-script

// . - любой одиночный символ
// [] - начало и конец класса символов
// {} - начало и конец количества
// () - начало и конец группы
// \ - следующий символ имеет специальный смысл
// * - ноль или более (суффикс)
// + - один или более (суффикс)
// ? - опционально (ноль или один) (суффикс)
// | - альтернатива
// ^ - начало строки или отрицание
// $ - конец строки

// ѕример: ^A*B+C?$

// \d+\d+ - нет подобразцов
// \d+(\d+) - один подобразец
// (\d+)(\d+) - два подобразца

// {n} - точно n раз
// {n,} - n или более раз
// {n,m} - по крайней мере n и максимум m раз
// * = {0,}
// + = {1,}
// ? = {0,1}

// ѕример: A{3}B{2,4}C*

// »мена классов символов:
// [:alnum:] - любой алфавитно-цифровой символ
// [:alpha:]- любой алфавитный символ
// [:digit:]- люба€ дес€тична€ цифра
// [:space:]- любой пробельный символ
// [:lower:] - любой символ в нижнем регистре
// [:upper:]- любой символ в верхнем регистре 

/ лассы символов:
// \d - [[:digit:]]
// \s - [[:space:]]
// \w - [_[:alnum:]]
// \D - не ...
// \S - не ...
// \W - не ...

// ѕример: идентификатор C++

// [:alpha:][:alnum:]* - ужасно
// [[:alpha:]][[:alnum:]]* - тоже плохо
// ([[:alpha:]]|_)[[:alnum:]]* - все еще плохо
// ([[:alpha:]]|_)([[:alnum:]]|_)* - неуклюже
// [_[:alpha:]][_[:alnum:]]* - ќ
// [_[:alpha:]]\w* - коротко


// Perl

// if ($text = ~/ ^[1 - 9][0 - 9] * / ) {
// # текст, начинающийс€ с дес€тичной цифры
// # подходит: 3, 801403, 6543bebebe
// # не подходит : 0275, -123, abc11111
// }

// if ($text = ~/ ^0x[0 - 9a - fA - F]{ 1,8 }$ / ) {
// # шестнадцатеричное число в C - нотации
// # подходит: 0x5f3759df, 0xDEADBEEF
// # не подходит : 0x1234xxx, xxx0x5678, xxx0x9ABCxxx
// }