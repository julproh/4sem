Контрольные вопросы:

1 - "Состояне гонки" и его последствия.

Race Condition - конкуренция за выполнение операции первым при работе с несколькими потоками несинхронизированых между собой.

Возможно неопределенное поведение, добавление элемента в очередь, рост времени выполнения data race - гонка возникает из-за одновременной модификации объекта.

2 - Мьютексы и условные переменные.

mutex ( mutual exclusion - взаимное исключение) 
    - средство для предоставления эксклюзивного доступа к данным для одного потока;
    - механизм защиты разделяемых данных от гонки и нарушения инвариантов
условные переменные 
    - переменнык ассоциированы с каким-то событием или иным условием (один или несколько потоков могут ждать, когда условие окажется выполненым) 

3 - Гранулярность блокировки.

    - при слишком малой гранулярности блокировки - защита распространяется не на выполняемую операцию в целом, а на каждый объект класса.
    - при слишком большой гранулярности блокировки- 1 глобальный мьютекс -> увеличивается время для доступа каждого потока к большому количеству разделяемых данных 

4 - Взаимоблокровка.

Появление:

    - использование больше одного мьютекса для защиты одной операции. 
    - вызов несколькими потоками join() объекта std::thread, связанного с другими потоками

Предотвращение:

    - отсутствие вложенных блокировок
    - мьютексы с приоритетами
    - иерархия блокировок
    - гарантировать одинаковый порядок
    - std::(boost)lock
    - гибкая блокировка (std::unique_lock) 

5 - Атомарная операция и атомарный тип данных.

Атомарная операция - неделимая операция, не может быть выполнена наполовину.
<atomic> - тип данных над которыми производятся атомарные операции, которые изначально могли не иметь данного свойства
Атомарная операции и типы данных - низкоуровневые механизмы синхронизации, которые транслируют в машинные команды.
